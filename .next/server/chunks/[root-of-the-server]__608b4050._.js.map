{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/ADMIN/Documents/Ho%CC%A3c%20ta%CC%A3%CC%82p/WEBDK/src/lib/google-sheets.ts"],"sourcesContent":["import { google } from 'googleapis';\n\n// Khởi tạo Google Sheets API client\n// Ưu tiên dùng credentials từ env (client email + private key). Fallback sang keyFile khi không hợp lệ.\nconst clientEmail = process.env.GOOGLE_CLIENT_EMAIL;\nconst rawPrivateKey = process.env.GOOGLE_PRIVATE_KEY;\nconst normalizedPrivateKey = rawPrivateKey ? rawPrivateKey.replace(/\\\\n/g, '\\n') : undefined;\n\nconst isEnvCredsValid = Boolean(\n  clientEmail &&\n  normalizedPrivateKey &&\n  normalizedPrivateKey.includes('BEGIN PRIVATE KEY') &&\n  normalizedPrivateKey.includes('END PRIVATE KEY') &&\n  clientEmail.includes('@') &&\n  clientEmail.endsWith('.gserviceaccount.com')\n);\n\nif (clientEmail || rawPrivateKey) {\n  if (!isEnvCredsValid) {\n    console.warn('Env credentials detected but invalid. Falling back to keyFile.');\n  } else {\n    console.log('Using Google Sheets credentials from environment variables.');\n  }\n}\n\nconst auth = new google.auth.GoogleAuth(\n  isEnvCredsValid\n    ? {\n        credentials: {\n          client_email: clientEmail as string,\n          private_key: normalizedPrivateKey as string,\n        },\n        scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n      }\n    : {\n        keyFile: process.env.GOOGLE_SERVICE_ACCOUNT_KEY_FILE || './service-account-key.json',\n        scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n      }\n);\n\nconst sheets = google.sheets({ version: 'v4', auth });\n\nexport interface ApplicationData {\n  fullName: string;\n  email: string;\n  phone: string;\n  facebookLink: string;\n  reason: string;\n  expectation: string;\n  situation: string;\n  department: string;\n  portraitPhoto?: File;\n}\n\nexport interface ContactData {\n  name: string;\n  email: string;\n  message: string;\n}\n\nexport async function appendApplicationToSheet(applicationData: ApplicationData) {\n  try {\n    const spreadsheetId = process.env.GOOGLE_SHEET_ID;\n    const range = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:J'; // A:J cho 10 cột (bao gồm thông tin ảnh)\n\n    if (!spreadsheetId || spreadsheetId === 'demo_sheet_id_replace_with_real_one' || spreadsheetId === 'your_google_sheet_id_here') {\n      console.warn('Google Sheets not configured properly. Data would be saved to:', applicationData);\n      return { success: false, message: 'Google Sheets chưa được cấu hình: thiếu GOOGLE_SHEET_ID' };\n    }\n\n    // Chuẩn bị dữ liệu để ghi vào sheet\n    const values = [\n      [\n        new Date().toISOString(), // Timestamp\n        applicationData.fullName,\n        applicationData.email,\n        applicationData.phone,\n        applicationData.facebookLink,\n        applicationData.reason,\n        applicationData.expectation,\n        applicationData.situation,\n        applicationData.department,\n        // applicationData.portraitPhoto ? 'Có ảnh' : 'Không có ảnh', // Thông tin về ảnh\n      ]\n    ];\n\n    const response = await sheets.spreadsheets.values.append({\n      spreadsheetId,\n      range,\n      valueInputOption: 'USER_ENTERED',\n      requestBody: {\n        values,\n      },\n    });\n\n    console.log('Data appended successfully:', response.data);\n    const sheetUrl = `https://docs.google.com/spreadsheets/d/${spreadsheetId}`;\n    return { success: true, message: 'Data written to Google Sheet successfully', sheetUrl };\n\n  } catch (error) {\n    console.error('Error writing to Google Sheet:', error);\n    throw new Error(`Failed to write to Google Sheet: ${error}`);\n  }\n}\n\nexport async function appendContactToSheet(contactData: ContactData) {\n  try {\n    const spreadsheetId = process.env.GOOGLE_SHEET_ID;\n    const range = process.env.GOOGLE_SHEET_RANGE_CONTACT || 'Contact!A:D'; // A:D cho 4 cột\n\n    if (!spreadsheetId || spreadsheetId === 'demo_sheet_id_replace_with_real_one' || spreadsheetId === 'your_google_sheet_id_here') {\n      console.warn('Google Sheets not configured properly. Data would be saved to:', contactData);\n      return { success: false, message: 'Google Sheets chưa được cấu hình: thiếu GOOGLE_SHEET_ID' };\n    }\n\n    // Chuẩn bị dữ liệu để ghi vào sheet\n    const values = [\n      [\n        new Date().toISOString(), // Timestamp\n        contactData.name,\n        contactData.email,\n        contactData.message,\n      ]\n    ];\n\n    const response = await sheets.spreadsheets.values.append({\n      spreadsheetId,\n      range,\n      valueInputOption: 'USER_ENTERED',\n      requestBody: {\n        values,\n      },\n    });\n\n    console.log('Contact data appended successfully:', response.data);\n    const sheetUrl = `https://docs.google.com/spreadsheets/d/${spreadsheetId}`;\n    return { success: true, message: 'Contact data written to Google Sheet successfully', sheetUrl };\n\n  } catch (error) {\n    console.error('Error writing contact data to Google Sheet:', error);\n    throw new Error(`Failed to write contact data to Google Sheet: ${error}`);\n  }\n}\n\nexport async function getSheetData() {\n  try {\n    const spreadsheetId = process.env.GOOGLE_SHEET_ID;\n    const range = process.env.GOOGLE_SHEET_RANGE || 'Sheet1!A:I';\n\n    if (!spreadsheetId || spreadsheetId === 'demo_sheet_id_replace_with_real_one') {\n      console.warn('Google Sheets not configured properly. Returning demo data.');\n      return [\n        ['Timestamp', 'Họ và Tên', 'Email', 'Phone', 'Facebook', 'Lý do', 'Kỳ vọng', 'Tình huống', 'Ban'],\n        ['2024-01-01T00:00:00.000Z', 'Demo User', 'demo@example.com', '0123456789', 'https://facebook.com/demo', 'Demo reason', 'Demo expectation', 'Demo situation', 'Demo department']\n      ];\n    }\n\n    const response = await sheets.spreadsheets.values.get({\n      spreadsheetId,\n      range,\n    });\n\n    return response.data.values || [];\n  } catch (error) {\n    console.error('Error reading from Google Sheet:', error);\n    throw new Error(`Failed to read from Google Sheet: ${error}`);\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/ADMIN/Documents/Ho%CC%A3c%20ta%CC%A3%CC%82p/WEBDK/src/app/api/sheets/test/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getSheetData } from '@/lib/google-sheets';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const data = await getSheetData();\n    \n    return NextResponse.json({\n      success: true,\n      data,\n      message: 'Data retrieved successfully'\n    });\n  } catch (error) {\n    console.error('Error in sheets test API:', error);\n    \n    return NextResponse.json({\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      message: 'Failed to retrieve data from Google Sheets'\n    }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,OAAO,MAAM,CAAA,GAAA,gIAAA,CAAA,eAAY,AAAD;QAE9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT;YACA,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAE3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,SAAS;QACX,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}